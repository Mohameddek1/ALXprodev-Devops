#!/bin/bash
# Task: Batch Pokémon Data Retrieval with Error Handling & Retry

POKEMONS=("bulbasaur" "ivysaur" "venusaur" "charmander" "charmeleon")
OUTPUT_DIR="pokemon_data"
API_URL="https://pokeapi.co/api/v2/pokemon"
MAX_RETRIES=3
DELAY=2

# Create output directory if missing
mkdir -p "$OUTPUT_DIR"

# Ensure jq is available (Windows-friendly)
JQ="./Advanced_shell/jq.exe"
if [[ ! -f "$JQ" ]]; then
    echo "Error: jq executable not found at $JQ"
    exit 1
fi

for pokemon in "${POKEMONS[@]}"; do
    echo "Fetching data for $pokemon..."

    attempt=1
    success=false

    while [[ $attempt -le $MAX_RETRIES ]]; do
        # Fetch data
        response=$(curl -s -w "%{http_code}" -o "$OUTPUT_DIR/$pokemon.json" "$API_URL/$pokemon")

        # Extract HTTP status code (last 3 chars)
        http_code="${response: -3}"

        if [[ "$http_code" == "200" ]]; then
            echo "Saved data to $OUTPUT_DIR/$pokemon.json ✅"
            success=true
            break
        else
            echo "Attempt $attempt failed (HTTP $http_code). Retrying in $DELAY seconds..."
            sleep $DELAY
        fi

        ((attempt++))
    done

    if [[ $success == false ]]; then
        echo "❌ Failed to fetch data for $pokemon after $MAX_RETRIES attempts. Skipping."
        rm -f "$OUTPUT_DIR/$pokemon.json" # Remove incomplete file
    fi

    # Avoid hitting API rate limits
    sleep $DELAY
done
