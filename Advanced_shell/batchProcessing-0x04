#!/bin/bash
# Task: Parallel Pokémon Data Retrieval with Process Management

POKEMONS=("bulbasaur" "ivysaur" "venusaur" "charmander" "charmeleon")
OUTPUT_DIR="pokemon_data"
API_URL="https://pokeapi.co/api/v2/pokemon"

mkdir -p "$OUTPUT_DIR"

# Use jq if available in repo (Git Bash Windows friendly)
JQ="./Advanced_shell/jq.exe"
if [[ ! -f "$JQ" ]]; then
    echo "Error: jq executable not found at $JQ"
    exit 1
fi

fetch_pokemon() {
    local pokemon=$1
    local output_file="$OUTPUT_DIR/$pokemon.json"

    echo "Fetching data for $pokemon..."
    if curl -s -f -o "$output_file" "$API_URL/$pokemon"; then
        echo "Saved data to $output_file ✅"
    else
        echo "❌ Failed to fetch $pokemon"
        rm -f "$output_file"
    fi
}

# Start all fetches in background
for pokemon in "${POKEMONS[@]}"; do
    fetch_pokemon "$pokemon" &
done

# List all background jobs
echo "Background jobs running:"
jobs

# Wait for all jobs to finish
wait

# Cleanup: kill any leftover jobs (safety net)
kill $(jobs -p) 2>/dev/null

echo "All fetches completed and background jobs cleaned up!"
